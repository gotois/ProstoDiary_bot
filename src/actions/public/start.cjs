const { TELEGRAM_MINI_APP, IS_DEV } = require('../../environments/index.cjs');
const { getUsers } = require('../../libs/database.cjs');

function getWelcomeText() {
  return (
    '**–ü—Ä–∏–≤–µ—Ç\\! üëã**\n\n' +
    '–Ø \\- __–≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–π –±–æ—Ç__, ' +
    '–∏ —è –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –∏ –∑–∞–¥–∞—á–∞–º–∏\\. ' +
    '–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –¥–ª—è –≤–∞—Å —Å–¥–µ–ª–∞—Ç—å:\\.\n\n' +
    'üìÖ –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è–º–∏\n\n' +
    '‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á–∞—Ö –∏ –¥–µ–ª–∞—Ö\n\n' +
    'üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è–º–∏\n\n' +
    'üìä –ê–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è\n\n' +
    '–ü—Ä–æ–¥–æ–ª–∂–∞—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –õ–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º /licence\\.\n'
  ).trim();
}

function getInstallAgainText() {
  return (
    '**–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞**\n\n' +
    '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –∑–∞–Ω–æ–≤–æ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–µ—Ä–≤–∏—Å–æ–º\\.\n\n' +
    '–£–∑–Ω–∞–π –±–æ–ª—å—à–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –∫–æ–º–∞–Ω–¥–æ–π /help\\.\n' +
    '–ü—Ä–æ–¥–æ–ª–∂–∞—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –õ–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º /licence\\.\n'
  ).trim();
}

/**
 * –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
 * @description request_contact –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —Ç–∞–∫–æ–º –≤–∏–¥–µ
 * @param {object} bot - telegram bot
 * @param {object} message - telegram message
 * @returns {Promise<void>}
 */
module.exports = async (bot, message) => {
  let webAppUrl = `${TELEGRAM_MINI_APP}/tutorial?lang=${message.from.language_code}`;
  // eslint-disable-next-line unicorn/consistent-destructuring
  if (IS_DEV) {
    webAppUrl += '&debug=1';
  }
  const existUser = getUsers(message.chat.id)?.length > 0;
  if (!existUser) {
    await bot.sendMessage(message.chat.id, getInstallAgainText(), {
      parse_mode: 'MarkdownV2',
      disable_notification: true,
      reply_markup: {
        remove_keyboard: true,
        resize_keyboard: true,
        one_time_keyboard: true,
        keyboard: [
          [
            {
              text: '–ü—Ä–∏–Ω–∏–º–∞—é –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ',
              request_contact: true,
            },
          ],
        ],
      },
    });
  } else {
    /* uncomment in prod
    const me = await bot.getMe();
    const photos = await bot.getUserProfilePhotos(me.id);
    const photo = photos.photos?.[0]?.[0]?.file_id;
    const file = await bot.getFile(photo);
    const fileBuffer = await bot.getFileStream(file.file_id);
    await bot.sendPhoto(message.chat.id, fileBuffer, {
      caption: 'Hello',
      parse_mode: 'HTML',
      filename: 'hello',
      contentType: 'image/png',
    });
    */
    bot.sendMessage(message.chat.id, getWelcomeText(), {
      parse_mode: 'MarkdownV2',
      disable_notification: true,
      reply_markup: {
        remove_keyboard: true,
        resize_keyboard: true,
        one_time_keyboard: true,
        keyboard: [
          [
            {
              text: '–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è',
              web_app: { url: webAppUrl },
            },
          ],
        ],
      },
    });
  }
};
