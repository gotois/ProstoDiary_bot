const { setNewUser, hasUser } = require('../../libs/database.cjs');

function getWelcomeText() {
  return (
    '**–ü—Ä–∏–≤–µ—Ç\\! üëã**\n\n' +
    '–Ø \\- __–≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–π –±–æ—Ç__, ' +
    '–∏ —è –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –∏ –∑–∞–¥–∞—á–∞–º–∏\\. ' +
    '–í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –¥–ª—è –≤–∞—Å —Å–¥–µ–ª–∞—Ç—å:\\.\n\n' +
    'üìÖ –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è–º–∏\n\n' +
    '‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö –≤—Å—Ç—Ä–µ—á–∞—Ö –∏ –¥–µ–ª–∞—Ö\n\n' +
    'üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è–º–∏\n\n' +
    'üìä –ê–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è\n\n' +
    '–ü—Ä–æ–¥–æ–ª–∂–∞—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –õ–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–º —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ–º /licence\\.\n'
  ).trim();
}

function getInstallAgainText() {
  return '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è\\.\n\n–£–∑–Ω–∞–π –±–æ–ª—å—à–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π –∫–æ–º–∞–Ω–¥–æ–π /help\\.'.trim();
}

/**
 * @description –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
 * @param {object} bot - telegram bot
 * @param {object} message - telegram message
 * @returns {Promise<void>}
 */
module.exports = async (bot, message) => {
  if (hasUser(message.chat.id)) {
    await bot.sendMessage(message.chat.id, getInstallAgainText(), {
      parse_mode: 'MarkdownV2',
      disable_notification: false,
      reply_to_message_id: message.message_id,
      reply_markup: {
        remove_keyboard: true,
        resize_keyboard: true,
        one_time_keyboard: true,
        keyboard: [],
      },
    });
  } else {
    await setNewUser(message.chat.id);
    await bot.sendMessage(message.chat.id, getWelcomeText(), {
      parse_mode: 'MarkdownV2',
      disable_notification: false,
      reply_to_message_id: message.message_id,
      reply_markup: {
        remove_keyboard: true,
        resize_keyboard: true,
        one_time_keyboard: true,
        keyboard: [
          [
            {
              text: 'üìç–û–ø—Ä–µ–¥–µ–ª–∏ –º–æ–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å',
              request_location: true,
            },
          ],
        ],
      },
    });
  }
};
